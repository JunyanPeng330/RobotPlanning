import numpy as np
import matplotlib.pyplot as plt

instances = ['(1)','(2)','(3)','(4)','(5)','(6)','(7)','(8)']

# average time
DDPG = [1.04, 1.27, 1.54, 1.61, 1.28, 2.80, 1.51, 1.46]
TD3 = [2.24, 1.79, 1.98, 1.80, 2.71, 2.87, 3.54, 1.90]
x = np.arange(len(instances))
width = 0.3
d = x
t = x + width
plt.bar(d, DDPG, width=width, color='crimson', label='DDPG')
plt.bar(t, TD3, width=width, color='lightseagreen', label='TD3')
plt.xticks(x+0.5*width, labels=instances)
for i in range(len(instances)):
    plt.text(d[i], DDPG[i], DDPG[i], va="bottom",ha="center",fontsize=7)
    plt.text(t[i], TD3[i], TD3[i], va="bottom", ha="center", fontsize=7)
plt.legend(loc='upper left', prop={'size':6})
title1 = 'average time for one episode'
plt.title(title1)
plt.xlabel('instance')
plt.ylabel('mean time over 700 episodes/ second')
fig_path = 'result/' + 'average time' + '.png'
plt.savefig(fig_path)
plt.close()

DDPG = [97, 109, 134, 251, 156, 292, 148, 182]
TD3 = [629, 140, 327, 134, 276, 490, 257, 734]
x = np.arange(len(instances))
width = 0.3
d = x
t = x + width
plt.bar(d, DDPG, width=width, color='crimson', label='DDPG')
plt.bar(t, TD3, width=width, color='lightseagreen', label='TD3')
plt.xticks(x+0.5*width, labels=instances)
for i in range(len(instances)):
    plt.text(d[i], DDPG[i], DDPG[i], va="bottom",ha="center",fontsize=7)
    plt.text(t[i], TD3[i], TD3[i], va="bottom", ha="center", fontsize=7)
plt.legend(loc='upper left', prop={'size':6})
title2 = 'the episode of the first feasible solution'
plt.title(title2)
plt.xlabel('instance')
plt.ylabel('first feasible solution:y-th episode')
fig_path = 'result/' + 'first feasible' + '.png'
plt.savefig(fig_path)
plt.close()


# [4,4,2]
best_epi = [0, 2, 4, 14, 28, 34, 52, 55, 56, 60, 61, 76, 78, 79, 88, 89, 90, 94, 95, 96, 97, 98, 100, 149, 152, 156, 159, 165, 205, 222, 229, 334]
best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 81, 77, 77, 75, 76, 75, 73, 71, 74]
fsbl_epi = [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 574, 576, 577, 578, 579, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 669, 670, 671, 672, 673, 674, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699]
fsbl_step = [81, 102, 81, 77, 79, 82, 81, 77, 76, 81, 75, 79, 80, 79, 80, 78, 76, 78, 111, 79, 77, 77, 77, 81, 78, 76, 78, 135, 78, 78, 106, 76, 76, 77, 81, 79, 81, 80, 111, 81, 80, 81, 80, 81, 80, 81, 81, 80, 78, 80, 81, 78, 79, 77, 79, 77, 75, 78, 75, 76, 76, 76, 75, 74, 74, 74, 75, 75, 74, 73, 73, 73, 75, 73, 75, 74, 115, 115, 77, 71, 73, 72, 72, 72, 72, 73, 73, 102, 77, 76, 75, 77, 76, 76, 76, 75, 76, 76, 75, 77, 78, 77, 75, 76, 75, 76, 75, 76, 74, 74, 75, 75, 76, 76, 76, 75, 75, 75, 76, 75, 75, 74, 76, 75, 76, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 75, 75, 77, 75, 76, 75, 75, 77, 77, 78, 77, 79, 81, 80, 78, 80, 77, 78, 79, 78, 76, 80, 79, 77, 80, 78, 80, 75, 78, 76, 76, 77, 77, 75, 77, 75, 74, 75, 75, 77, 75, 74, 74, 78, 75, 74, 74, 74, 75, 75, 76, 75, 76, 77, 77, 77, 75, 76, 75, 77, 75, 76, 75, 76, 73, 76, 75, 74, 78, 75, 75, 77, 75, 76, 75, 74, 74, 74, 74, 74, 74, 73, 73, 73, 74, 74, 73, 73, 72, 74, 74, 75, 73, 74, 74, 73, 73, 73, 75, 73, 75, 73, 74, 75, 74, 74, 74, 75, 75, 75, 75, 74, 73, 74, 74, 75, 74, 74, 73, 75, 74, 73, 75, 75, 74, 74, 74, 74, 74, 74, 75, 73, 74, 74, 75, 74, 74, 73, 74, 76, 75, 75, 75, 76, 74, 75, 75, 75, 75, 75, 74, 75, 73, 74, 74, 73, 73, 74, 73, 74, 74, 73, 73, 74, 74, 72, 74, 74, 73, 72, 73, 72, 72, 73, 74, 73, 74, 73, 73, 73, 75, 72, 73, 74, 74, 104, 73, 73, 73, 73, 73, 74, 73, 74, 74, 74, 73, 73, 75, 74, 72, 74, 73, 75, 75, 73, 74, 73, 73, 74, 73, 73, 72, 73, 73, 73, 73, 73, 74, 73, 73, 73, 73, 73, 73, 73, 73, 73, 74, 74, 105, 74, 73, 73, 74, 74, 74, 73, 74, 74, 74, 74, 74, 74, 73, 74, 74, 73, 75, 74, 75, 75, 74, 74, 74, 74, 74, 74, 75, 74, 73, 74, 73, 74, 74, 74, 74, 74, 74, 73, 75, 74, 74, 74, 73, 74, 74, 73, 73, 74, 74, 74, 73, 73, 73, 74, 73, 74, 73, 75, 74, 73, 73, 75, 73, 74, 74, 73, 73, 73, 73, 74, 73, 74, 72, 72, 74, 72, 72, 72, 73, 73, 72, 73, 73, 74, 72, 73, 73, 73, 74, 72, 72, 74, 74, 74, 73, 73, 73, 72, 73, 77, 73, 74, 72, 73, 73, 72, 73, 73, 73, 73, 73, 74, 74, 74, 74, 73, 73, 73, 73, 74, 73, 73, 73, 77, 72, 74, 73, 73, 75, 74, 74, 73]
plt.plot(fsbl_epi, fsbl_step, color='coral', linewidth=1, label='DDPG feasible solution')
plt.plot(best_epi, best_step, color='salmon', linewidth=0.8, linestyle='--')
plt.scatter(best_epi, best_step, color='crimson', s=30, label='DDPG best solution')
td_best_epi = [0, 2, 3, 11, 13, 14, 16, 78, 238, 240, 241, 271, 274, 275, 629, 643, 646, 649, 654, 688]
td_best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 99, 94, 92, 92, 93, 87]
td_fsbl_epi = [629, 630, 634, 636, 638, 640, 641, 642, 643, 644, 645, 646, 648, 649, 651, 654, 661, 663, 665, 666, 669, 671, 673, 675, 678, 681, 682, 683, 684, 685, 688, 689, 692, 694, 695, 698, 699]
td_fsbl_step = [99, 100, 100, 101, 99, 99, 96, 96, 94, 97, 97, 92, 98, 92, 95, 93, 95, 93, 94, 93, 92, 90, 90, 91, 93, 92, 90, 97, 102, 90, 87, 94, 96, 90, 99, 95, 104]
plt.plot(td_fsbl_epi, td_fsbl_step, color='limegreen', linewidth=1, label='TD3 feasible solution')
plt.plot(td_best_epi, td_best_step, color='lightgreen', linewidth=0.8, linestyle='--')
plt.scatter(td_best_epi, td_best_step, color='green', s=30, label='TD3 best solution')
plt.legend(loc='upper right', prop={'size':6})
title1 = 'instance(1)'
plt.title(title1)
plt.xlabel('instance (1)')
plt.ylabel('number of steps of the solution')
fig_path = 'result/' + '[4,4,2]' + '.png'
plt.savefig(fig_path)
plt.close()
num_fsbl1 = len(fsbl_epi)
t_num_fsbl1 = len(td_fsbl_epi)


# [1,4,5]
best_epi = [0, 2, 4, 14, 28, 34, 82, 87, 88, 89, 91, 97, 99, 104, 105, 107, 109, 250, 252, 254, 259, 282, 283, 291, 297, 298, 300, 302, 306, 313, 317, 322, 333, 334, 360, 393, 397, 399, 406, 427, 523, 534]
best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 114, 75, 75, 75, 77, 73, 72, 72, 73, 72, 72, 72, 73, 72, 71, 72, 73, 72, 72, 73, 72, 72, 72, 72, 73, 72]
fsbl_epi = [109, 125, 126, 127, 128, 129, 130, 131, 134, 136, 138, 139, 140, 141, 148, 149, 151, 172, 177, 178, 180, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699]
fsbl_step = [114, 121, 152, 119, 116, 160, 153, 120, 119, 130, 137, 156, 133, 132, 173, 198, 190, 197, 181, 183, 187, 75, 77, 75, 78, 75, 73, 77, 82, 77, 75, 110, 75, 75, 74, 131, 76, 76, 74, 73, 72, 72, 74, 74, 73, 73, 72, 72, 72, 72, 72, 72, 72, 72, 73, 72, 73, 72, 73, 72, 73, 72, 72, 73, 72, 72, 73, 72, 73, 73, 72, 73, 72, 73, 71, 73, 72, 73, 72, 73, 73, 72, 74, 74, 73, 73, 140, 73, 73, 72, 73, 74, 72, 72, 73, 72, 72, 72, 73, 73, 72, 73, 72, 73, 72, 72, 73, 72, 72, 73, 73, 73, 73, 72, 72, 74, 73, 72, 72, 73, 73, 73, 73, 72, 73, 72, 73, 74, 73, 73, 72, 73, 73, 73, 73, 73, 73, 72, 73, 72, 72, 72, 73, 73, 72, 73, 72, 73, 73, 74, 74, 75, 72, 73, 73, 73, 74, 74, 74, 73, 73, 72, 74, 74, 73, 73, 102, 72, 73, 73, 73, 74, 74, 72, 72, 72, 72, 73, 73, 73, 73, 73, 72, 73, 72, 73, 72, 73, 73, 74, 74, 74, 75, 74, 76, 93, 72, 74, 73, 74, 74, 73, 74, 74, 75, 74, 74, 75, 154, 75, 74, 76, 74, 74, 75, 75, 74, 76, 76, 76, 75, 75, 75, 75, 77, 76, 77, 75, 75, 74, 75, 75, 75, 76, 75, 75, 75, 75, 74, 75, 75, 76, 74, 75, 75, 73, 74, 73, 73, 73, 75, 74, 74, 73, 73, 74, 73, 73, 73, 73, 73, 73, 74, 73, 74, 73, 73, 74, 73, 73, 73, 73, 73, 73, 72, 73, 73, 72, 72, 72, 73, 72, 73, 73, 72, 73, 73, 72, 72, 72, 73, 73, 72, 72, 73, 72, 72, 73, 73, 72, 73, 73, 73, 72, 72, 73, 72, 72, 72, 72, 72, 72, 72, 72, 72, 73, 72, 72, 73, 72, 72, 72, 73, 72, 72, 72, 72, 73, 73, 73, 73, 72, 73, 72, 72, 74, 73, 73, 73, 73, 73, 72, 72, 72, 72, 73, 73, 72, 72, 72, 72, 73, 72, 72, 73, 74, 73, 73, 73, 72, 73, 72, 72, 72, 73, 72, 72, 72, 73, 73, 73, 73, 72, 72, 72, 72, 73, 72, 72, 72, 72, 73, 73, 74, 73, 72, 72, 72, 73, 73, 72, 72, 72, 73, 73, 73, 73, 73, 72, 73, 72, 73, 72, 73, 73, 74, 72, 72, 73, 72, 73, 75, 72, 72, 72, 73, 72, 73, 72, 72, 72, 73, 72, 72, 72, 72, 71, 72, 72, 73, 73, 72, 73, 73, 72, 73, 73, 73, 72, 72]
plt.plot(fsbl_epi, fsbl_step, color='coral', linewidth=1, label='DDPG feasible solution')
plt.plot(best_epi, best_step, color='salmon', linewidth=0.8, linestyle='--')
plt.scatter(best_epi, best_step, color='crimson', s=30, label='DDPG best solution')
td_best_epi = [0, 2, 3, 11, 12, 13, 14, 16, 22, 83, 84, 85, 90, 91, 93, 96, 97, 112, 113, 116, 117, 127, 128, 133, 134, 135, 140, 141, 160, 203, 205, 238, 243, 245, 298, 301, 302, 307, 309, 312, 313, 317, 318, 347, 348, 354, 382, 415, 422, 424, 429, 448, 493, 649]
td_best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 119, 119, 118, 108, 110, 104, 108, 108, 114, 106, 106, 103, 100, 100, 96, 97, 95, 91, 90, 88, 80, 81, 81, 81, 79, 79, 82, 82]
td_fsbl_epi = [140, 141, 144, 157, 158, 159, 160, 161, 203, 205, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 448, 449, 450, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 540, 541, 542, 543, 544, 545, 546, 551, 561, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 680, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699]
td_fsbl_step = [119, 119, 125, 119, 120, 119, 118, 120, 108, 110, 113, 112, 115, 117, 115, 113, 113, 111, 112, 111, 111, 115, 112, 116, 114, 116, 124, 116, 113, 114, 114, 113, 110, 109, 104, 109, 107, 110, 108, 111, 108, 108, 112, 110, 113, 113, 112, 116, 113, 115, 117, 113, 111, 115, 114, 112, 112, 111, 117, 115, 116, 116, 114, 116, 121, 117, 114, 116, 112, 115, 113, 110, 116, 118, 115, 113, 113, 113, 115, 115, 109, 109, 112, 117, 116, 114, 121, 133, 106, 106, 113, 104, 113, 111, 103, 113, 100, 105, 102, 100, 96, 101, 99, 99, 97, 95, 96, 95, 95, 97, 97, 97, 98, 100, 100, 98, 100, 99, 101, 102, 102, 97, 101, 100, 97, 98, 98, 96, 100, 95, 95, 94, 94, 90, 91, 90, 90, 93, 95, 93, 91, 88, 95, 92, 103, 95, 102, 97, 88, 97, 96, 97, 96, 107, 102, 97, 93, 100, 86, 87, 82, 94, 88, 92, 87, 86, 81, 84, 80, 80, 81, 81, 82, 83, 80, 84, 93, 87, 84, 85, 87, 88, 97, 85, 86, 99, 89, 96, 93, 91, 89, 90, 89, 87, 90, 98, 102, 115, 81, 104, 93, 84, 85, 88, 81, 83, 81, 79, 83, 81, 80, 79, 78, 79, 78, 79, 80, 82, 79, 80, 80, 80, 84, 154, 81, 79, 81, 80, 77, 81, 80, 79, 78, 78, 79, 79, 80, 79, 78, 79, 81, 79, 80, 79, 79, 79, 80, 80, 80, 79, 81, 80, 83, 83, 81, 82, 105, 82, 82, 83, 82, 82, 84, 83, 85, 88, 86, 88, 85, 85, 82, 83, 88, 94, 93, 85, 86, 87, 93, 94, 90, 94, 89, 92, 95, 88, 84, 91, 89, 90, 88, 92, 89, 85, 83, 86, 83, 116, 85, 105, 84, 87, 97, 89, 88, 87, 86, 86, 87, 89, 89, 86, 89, 85, 88, 84, 99, 102, 93, 102, 94, 86, 85, 86, 88, 85, 87, 85, 88, 87, 87, 87, 88, 87, 84, 85, 84, 84, 84, 84, 85, 86, 87, 82, 87, 83, 84, 82, 82, 83, 83, 83, 82, 82, 82, 83, 85, 83, 80, 85, 84, 84, 86, 91, 87, 130, 96, 106, 93, 85, 86, 151, 132, 139, 136, 105, 86, 97, 89, 197, 96, 86, 91, 90, 88, 87, 92, 85]
plt.plot(td_fsbl_epi, td_fsbl_step, color='limegreen', linewidth=1, label='TD3 feasible solution')
plt.plot(td_best_epi, td_best_step, color='lightgreen', linewidth=0.8, linestyle='--')
plt.scatter(td_best_epi, td_best_step, color='green', s=30, label='TD3 best solution')
plt.legend(loc='upper right', prop={'size':6})
title2 = 'instance(2)'
plt.title(title2)
plt.xlabel('instance (2)')
plt.ylabel('number of steps of the solution')
fig_path = 'result/' + '[1,4,5]' + '.png'
plt.savefig(fig_path)
plt.close()
num_fsbl2 = len(fsbl_epi)
t_num_fsbl2 = len(td_fsbl_epi)

# [3,5,2]
best_epi = [0, 2, 4, 14, 28, 35, 37, 53, 54, 57, 69, 71, 83, 84, 85, 97, 100, 106, 134, 136, 138, 141, 146, 152, 156, 162, 163, 175, 177, 179, 185, 186, 187, 188, 189, 194, 195, 201, 202, 205, 206, 219, 270, 450, 502, 511, 631, 642]
best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 106, 90, 89, 89, 87, 88, 88, 89, 88, 87, 87, 86, 86, 84, 85, 86, 83, 84, 83, 72, 72, 69, 69, 69, 68, 69, 69, 68, 68, 68]
fsbl_epi = [134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699]
fsbl_step = [106, 90, 103, 89, 100, 104, 89, 89, 90, 87, 89, 91, 90, 88, 88, 108, 88, 90, 103, 89, 89, 89, 88, 88, 91, 103, 89, 102, 88, 103, 89, 102, 94, 97, 87, 89, 87, 90, 86, 87, 90, 88, 87, 87, 86, 84, 85, 86, 83, 85, 84, 84, 90, 84, 83, 83, 83, 83, 81, 81, 72, 72, 72, 70, 69, 69, 68, 69, 68, 69, 69, 68, 69, 69, 69, 69, 69, 72, 69, 78, 73, 71, 135, 70, 69, 70, 70, 70, 69, 68, 69, 69, 70, 69, 69, 69, 70, 69, 69, 71, 70, 70, 71, 70, 70, 72, 70, 71, 70, 69, 70, 70, 70, 71, 70, 70, 69, 69, 69, 70, 69, 70, 69, 70, 69, 69, 69, 69, 69, 68, 69, 69, 70, 70, 69, 69, 70, 70, 69, 68, 69, 69, 69, 69, 69, 69, 69, 69, 70, 70, 68, 68, 68, 68, 69, 68, 70, 68, 69, 69, 68, 70, 69, 69, 68, 68, 68, 68, 69, 67, 68, 68, 68, 70, 69, 69, 69, 69, 69, 70, 70, 103, 68, 69, 69, 68, 69, 69, 69, 68, 69, 83, 106, 69, 69, 69, 69, 68, 109, 70, 70, 69, 69, 69, 69, 71, 70, 69, 69, 70, 70, 70, 69, 70, 69, 69, 70, 69, 70, 69, 69, 70, 69, 70, 69, 70, 69, 69, 69, 69, 69, 70, 69, 69, 69, 69, 69, 69, 69, 68, 68, 69, 69, 69, 68, 68, 69, 76, 69, 69, 69, 69, 77, 69, 69, 69, 68, 69, 69, 75, 68, 69, 69, 69, 68, 69, 69, 70, 70, 70, 69, 68, 70, 70, 69, 71, 71, 69, 69, 69, 70, 73, 69, 70, 69, 69, 73, 72, 69, 69, 69, 69, 71, 69, 69, 69, 69, 69, 70, 73, 70, 69, 70, 71, 70, 69, 69, 68, 70, 69, 69, 69, 70, 69, 70, 70, 68, 70, 68, 71, 71, 69, 69, 70, 69, 69, 69, 70, 70, 69, 69, 69, 69, 70, 69, 68, 70, 69, 68, 69, 69, 70, 68, 69, 69, 69, 69, 68, 69, 71, 70, 70, 69, 69, 70, 69, 68, 70, 69, 69, 70, 69, 69, 68, 69, 69, 68, 68, 69, 69, 68, 70, 69, 69, 70, 68, 69, 68, 69, 70, 69, 68, 68, 69, 68, 70, 69, 68, 69, 68, 69, 68, 69, 69, 69, 69, 69, 69, 69, 68, 69, 68, 69, 69, 69, 70, 68, 68, 69, 68, 70, 69, 68, 69, 68, 69, 68, 68, 69, 68, 69, 68, 69, 69, 69, 68, 68, 68, 68, 68, 68, 68, 68, 69, 68, 68, 69, 68, 68, 69, 68, 68, 69, 69, 68, 68, 68, 68, 70, 68, 69, 68, 69, 68, 68, 68, 68, 68, 69, 69, 69, 69, 68, 68, 69, 68, 69, 68, 69, 69, 69, 68, 69, 68, 68, 68, 69, 68, 68, 69, 68, 69, 69, 68, 69, 69, 69, 69, 68, 68, 68, 68, 68, 68, 69, 68, 68, 68, 68, 68, 68, 68, 69, 69, 68, 68, 68, 68, 67, 69, 68, 68, 68, 68, 70, 68, 68, 67, 68, 69, 68, 69, 69, 69, 68, 69, 68, 68, 68, 69, 68, 68, 68, 69, 68, 68, 68, 68, 69, 68, 68, 68, 68, 68, 69, 68, 68, 69, 69, 68, 68, 68, 69, 69, 68, 68, 68, 68, 69]
plt.plot(fsbl_epi, fsbl_step, color='coral', linewidth=1, label='DDPG feasible solution')
plt.plot(best_epi, best_step, color='salmon', linewidth=0.8, linestyle='--')
plt.scatter(best_epi, best_step, color='crimson', s=30, label='DDPG best solution')
td_best_epi = [0, 2, 3, 11, 13, 14, 16, 115, 118, 125, 126, 128, 131, 166, 184, 185, 186, 187, 188, 189, 327, 333, 335, 337, 342, 344, 346, 347, 510, 516, 526, 528, 568, 575, 579, 609, 610, 619]
td_best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 84, 81, 80, 81, 78, 78, 76, 72, 71, 71, 71, 71, 69, 69, 70, 71, 69, 70]
td_fsbl_epi = [327, 329, 330, 332, 333, 334, 335, 336, 337, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 391, 393, 394, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 493, 498, 499, 501, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 578, 579, 580, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699]
td_fsbl_step = [84, 84, 85, 88, 81, 82, 80, 85, 81, 78, 78, 81, 76, 72, 134, 78, 76, 76, 76, 76, 79, 79, 77, 77, 76, 79, 81, 75, 91, 82, 81, 80, 78, 75, 77, 73, 74, 78, 77, 80, 76, 75, 77, 84, 78, 81, 81, 75, 79, 79, 150, 85, 102, 160, 78, 78, 80, 83, 82, 83, 77, 126, 78, 81, 99, 82, 76, 76, 82, 78, 76, 78, 77, 78, 82, 77, 80, 78, 83, 77, 80, 79, 81, 76, 78, 78, 78, 83, 79, 88, 75, 78, 77, 79, 119, 76, 76, 81, 78, 77, 81, 78, 84, 76, 83, 83, 77, 110, 78, 77, 79, 83, 77, 86, 73, 80, 76, 82, 74, 87, 83, 82, 85, 97, 86, 93, 82, 88, 78, 75, 74, 75, 77, 75, 73, 73, 71, 75, 76, 72, 103, 74, 71, 102, 73, 71, 72, 72, 71, 71, 72, 71, 70, 80, 71, 70, 70, 73, 70, 70, 70, 72, 71, 71, 72, 74, 74, 71, 72, 70, 70, 70, 72, 80, 72, 72, 70, 69, 69, 70, 70, 69, 69, 78, 176, 70, 70, 158, 69, 70, 70, 70, 69, 69, 71, 69, 77, 70, 112, 81, 71, 69, 104, 105, 70, 70, 69, 71, 73, 70, 70, 71, 70, 72, 71, 74, 71, 110, 70, 166, 78, 75, 73, 75, 73, 73, 72, 75, 76, 73, 74, 73, 74, 74, 75, 75, 74, 76, 83, 74, 72, 73, 72, 72, 79, 79, 72, 80, 73, 109, 72, 73, 74, 77, 77, 79, 84, 77, 74, 78, 72, 78, 77, 77, 76, 74, 72, 71, 74, 70, 72, 72, 73, 73, 76, 72, 75, 70, 71, 72, 73, 134, 72, 71, 72, 70, 71, 129, 72, 70]
plt.plot(td_fsbl_epi, td_fsbl_step, color='limegreen', linewidth=1, label='TD3 feasible solution')
plt.plot(td_best_epi, td_best_step, color='lightgreen', linewidth=0.8, linestyle='--')
plt.scatter(td_best_epi, td_best_step, color='green', s=30, label='TD3 best solution')
plt.legend(loc='upper right', prop={'size':6})
title3 = 'instance(3)'
plt.title(title3)
plt.xlabel('instance (3)')
plt.ylabel('number of steps of the solution')
fig_path = 'result/' + '[3,5,2]' + '.png'
plt.savefig(fig_path)
plt.close()
num_fsbl3 = len(fsbl_epi)
t_num_fsbl3 = len(td_fsbl_epi)

# [3,4,1]
best_epi = [0, 2, 4, 14, 28, 34, 52, 53, 54, 71, 109, 117, 118, 222, 225, 238, 240, 241, 243, 251, 252, 263, 282, 354, 452, 474, 506, 509, 566, 669]
best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 174, 135, 105, 88, 88, 85, 86, 85, 85, 86, 85]
fsbl_epi = [251, 252, 255, 258, 261, 262, 263, 271, 273, 282, 284, 285, 286, 287, 288, 289, 290, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699]
fsbl_step = [174, 135, 152, 166, 186, 156, 105, 122, 102, 88, 128, 102, 96, 92, 96, 90, 94, 97, 110, 86, 89, 98, 92, 92, 105, 96, 97, 118, 91, 95, 101, 90, 102, 103, 90, 92, 95, 94, 89, 102, 90, 91, 102, 98, 90, 93, 90, 90, 92, 91, 91, 92, 92, 93, 91, 92, 91, 94, 96, 93, 94, 95, 95, 96, 97, 92, 93, 94, 90, 95, 95, 94, 90, 88, 90, 89, 89, 93, 90, 88, 90, 89, 96, 92, 89, 90, 91, 94, 94, 94, 90, 93, 94, 102, 93, 88, 91, 91, 90, 94, 90, 89, 94, 88, 88, 89, 94, 90, 89, 90, 90, 96, 89, 89, 89, 89, 88, 89, 91, 89, 114, 89, 91, 92, 92, 90, 89, 102, 89, 89, 86, 84, 87, 86, 86, 87, 90, 88, 88, 88, 88, 87, 87, 88, 86, 85, 90, 90, 86, 102, 87, 89, 86, 86, 87, 87, 87, 85, 87, 86, 89, 87, 87, 88, 88, 89, 102, 88, 86, 89, 87, 87, 89, 89, 87, 89, 87, 89, 87, 86, 86, 87, 89, 87, 86, 88, 86, 88, 88, 87, 88, 88, 90, 88, 88, 88, 90, 87, 88, 89, 88, 88, 88, 87, 88, 87, 87, 87, 87, 87, 87, 85, 86, 84, 85, 85, 86, 86, 85, 85, 85, 86, 85, 85, 85, 86, 86, 85, 86, 86, 87, 85, 86, 85, 86, 85, 86, 87, 87, 95, 85, 87, 90, 87, 103, 91, 86, 86, 91, 88, 87, 87, 86, 87, 91, 86, 89, 87, 85, 86, 86, 85, 87, 89, 90, 86, 104, 85, 86, 88, 89, 86, 86, 87, 86, 87, 92, 90, 86, 89, 92, 90, 90, 91, 91, 93, 95, 92, 93, 89, 87, 91, 87, 86, 91, 89, 87, 87, 87, 91, 91, 89, 89, 88, 86, 87, 87, 89, 86, 87, 86, 85, 88, 86, 85, 103, 88, 88, 89, 88, 88, 108, 89, 88, 87, 90, 116, 89, 102, 89, 89, 89, 87, 88, 89, 85, 87, 87, 104, 103, 88, 87, 87, 86, 87, 87, 87, 87, 86, 86, 88, 86, 88, 86, 87, 86, 86, 85, 88, 87, 87, 86, 86, 86, 86, 88, 86, 85, 86, 86, 88, 87, 89, 86, 87, 87, 90, 94, 87, 91, 87, 92, 102, 88, 87, 89, 88, 87, 91, 90, 86, 88, 87, 89, 90, 90, 85]
plt.plot(fsbl_epi, fsbl_step, color='coral', linewidth=1, label='DDPG feasible solution')
plt.plot(best_epi, best_step, color='salmon', linewidth=0.8, linestyle='--')
plt.scatter(best_epi, best_step, color='crimson', s=30, label='DDPG best solution')
td_best_epi = [0, 2, 3, 11, 13, 14, 16, 66, 72, 81, 84, 85, 86, 88, 90, 91, 92, 93, 99, 111, 114, 134, 139, 148, 160, 171, 172, 176, 181, 185, 232, 243, 245, 247, 250, 254, 255, 307, 355, 377]
td_best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 87, 86, 91, 89, 90, 90, 90, 87, 87, 85, 84, 85, 85, 86, 84, 85, 85, 84, 84]
td_fsbl_epi = [134, 136, 137, 138, 139, 140, 144, 147, 148, 149, 154, 160, 163, 166, 168, 169, 171, 172, 173, 174, 176, 180, 181, 183, 185, 186, 189, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 269, 270, 273, 274, 275, 277, 278, 279, 280, 281, 283, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 307, 308, 323, 328, 337, 339, 352, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 368, 376, 377, 378, 379, 387, 392, 394, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 491, 500, 503, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 613, 625, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674]
td_fsbl_step = [87, 88, 87, 88, 86, 87, 90, 91, 91, 90, 89, 89, 90, 90, 93, 92, 90, 90, 91, 91, 90, 90, 87, 89, 87, 88, 89, 99, 100, 98, 94, 91, 92, 94, 94, 92, 89, 90, 91, 90, 87, 89, 88, 86, 87, 87, 86, 85, 86, 85, 85, 86, 85, 86, 86, 86, 86, 85, 85, 84, 86, 85, 85, 85, 108, 85, 86, 85, 84, 84, 84, 85, 84, 84, 84, 84, 84, 85, 84, 84, 86, 85, 85, 85, 84, 84, 84, 86, 86, 85, 85, 85, 86, 84, 85, 85, 85, 84, 84, 85, 85, 85, 85, 84, 83, 85, 85, 87, 88, 85, 85, 85, 86, 84, 85, 85, 87, 87, 87, 88, 88, 87, 85, 87, 85, 84, 84, 85, 175, 106, 86, 87, 86, 88, 88, 89, 88, 89, 90, 90, 89, 91, 90, 91, 90, 91, 90, 91, 91, 91, 91, 90, 91, 91, 92, 93, 90, 94, 93, 95, 92, 92, 91, 93, 92, 92, 91, 92, 95, 94, 93, 94, 94, 96, 93, 91, 93, 99, 93, 94, 95, 98, 96, 93, 97, 91, 93, 96, 103, 93, 94, 91, 94, 97, 103, 90, 91, 84, 85, 85, 85, 86, 86, 85, 88, 88, 87, 87, 90, 88, 87, 91, 88, 87, 89, 87, 87, 87, 88, 88, 87, 88, 88, 87, 88, 88, 87, 88, 87, 85, 86, 86, 85, 86, 85, 85, 86, 86, 85, 87, 87, 86, 86, 86, 86, 85, 87, 87, 87, 87, 88, 87, 87, 87, 88, 88, 89, 89, 89, 88, 91, 91, 92, 92, 93, 92, 93, 93, 93, 94, 94, 97, 95, 94, 94, 94, 94, 93, 95, 94, 91, 92, 91, 91, 91, 90, 89, 92, 92, 90, 92, 87, 87, 89, 86, 91, 88, 91, 89, 90, 89, 88, 92, 93, 92, 92, 93, 95, 95, 96, 96, 94, 93, 96, 91, 94, 92, 95, 96, 93, 93, 94, 92, 92, 91, 92, 91, 90, 90, 92, 91, 91, 90, 91, 91, 91, 91, 92, 92, 93, 92, 91, 92, 93, 91, 92, 91, 92, 90, 92]
plt.plot(td_fsbl_epi, td_fsbl_step, color='limegreen', linewidth=1, label='TD3 feasible solution')
plt.plot(td_best_epi, td_best_step, color='lightgreen', linewidth=0.8, linestyle='--')
plt.scatter(td_best_epi, td_best_step, color='green', s=30, label='TD3 best solution')
plt.legend(loc='upper right', prop={'size':6})
title4 = 'instance(4)'
plt.title(title4)
plt.xlabel('instance (4)')
plt.ylabel('number of steps of the solution')
fig_path = 'result/' + '[3,4,1]' + '.png'
plt.savefig(fig_path)
plt.close()
num_fsbl4 = len(fsbl_epi)
t_num_fsbl4 = len(td_fsbl_epi)

# [5,2,3]
best_epi = [0, 2, 14, 20, 31, 34, 52, 54, 64, 69, 71, 72, 76, 78, 87, 89, 97, 106, 113, 123, 125, 127, 132, 138, 154, 156, 157, 169, 176, 178, 354, 356, 358, 360, 363, 386, 420, 653, 661, 675, 698]
best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 139, 134, 131, 132, 126, 74, 74, 74, 73, 72, 73, 73, 72, 73, 73, 72]
fsbl_epi = [156, 157, 158, 159, 169, 172, 175, 176, 178, 180, 182, 183, 184, 185, 186, 189, 190, 193, 194, 196, 199, 201, 203, 205, 206, 207, 208, 214, 216, 231, 354, 356, 358, 360, 361, 363, 364, 366, 367, 368, 370, 371, 372, 374, 375, 376, 378, 379, 381, 382, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 448, 449, 450, 452, 453, 454, 455, 456, 458, 459, 462, 463, 464, 466, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 585, 587, 589, 591, 592, 593, 594, 595, 596, 599, 600, 601, 602, 604, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 644, 649, 653, 655, 661, 662, 663, 664, 666, 670, 671, 675, 679, 680, 681, 682, 683, 684, 685, 688, 689, 691, 692, 694, 698, 699]
fsbl_step = [139, 134, 133, 134, 131, 141, 139, 132, 126, 130, 134, 139, 149, 143, 143, 152, 140, 128, 131, 135, 131, 134, 141, 133, 137, 136, 135, 145, 153, 196, 74, 74, 74, 73, 74, 72, 74, 75, 75, 75, 75, 74, 73, 73, 75, 75, 74, 76, 75, 75, 75, 73, 75, 76, 75, 75, 74, 75, 77, 73, 74, 76, 74, 74, 75, 75, 76, 75, 74, 75, 76, 73, 74, 74, 75, 75, 75, 73, 75, 76, 75, 73, 74, 75, 74, 74, 74, 74, 74, 74, 75, 76, 74, 74, 74, 74, 74, 74, 75, 75, 75, 74, 74, 75, 75, 74, 75, 74, 75, 75, 75, 76, 76, 75, 74, 73, 74, 76, 75, 75, 75, 74, 75, 75, 74, 74, 75, 76, 74, 74, 77, 74, 75, 76, 75, 75, 74, 74, 74, 74, 74, 75, 74, 76, 75, 74, 75, 75, 74, 74, 73, 74, 76, 73, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 73, 73, 74, 74, 74, 74, 75, 75, 74, 75, 74, 76, 76, 74, 74, 74, 74, 75, 74, 74, 76, 75, 74, 75, 74, 75, 74, 74, 74, 73, 74, 73, 78, 74, 75, 74, 77, 74, 74, 76, 75, 74, 73, 73, 73, 73, 73, 74, 74, 73, 74, 73, 74, 74, 73, 74, 74, 78, 75, 78, 74, 81, 76, 75, 85, 76, 75, 74, 75, 74, 75, 74, 74, 73, 75, 74, 74, 74, 74, 75, 75, 74, 74, 73, 72, 74, 73, 73, 74, 75, 73, 74, 74, 74, 73, 73, 74, 73, 72, 73, 73, 73, 73, 72, 73, 73, 72, 73, 74, 73, 74, 73, 73, 74, 72, 73, 73, 72, 74, 74, 73, 74, 74, 72, 73, 72, 73]
plt.plot(fsbl_epi, fsbl_step, color='coral', linewidth=1, label='DDPG feasible solution')
plt.plot(best_epi, best_step, color='salmon', linewidth=0.8, linestyle='--')
plt.scatter(best_epi, best_step, color='crimson', s=30, label='DDPG best solution')
td_best_epi = [0, 2, 3, 6, 11, 14, 16, 80, 86, 87, 88, 99, 276, 308, 309, 312, 327, 365, 375, 492, 493, 515, 519, 520, 521, 526, 527, 528, 537, 641, 678]
td_best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 113, 119, 117, 116, 116, 122, 106, 97, 96, 95, 91, 93, 95, 94, 93, 93, 90, 78, 79]
td_fsbl_epi = [276, 282, 283, 286, 288, 306, 308, 309, 311, 312, 316, 327, 365, 373, 375, 376, 379, 380, 387, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 570, 583, 585, 592, 594, 595, 596, 599, 600, 602, 603, 604, 605, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 623, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 665, 668, 669, 670, 671, 672, 673, 674, 675, 678, 681, 682, 683, 684, 685, 689, 690]
td_fsbl_step = [113, 133, 150, 153, 129, 121, 119, 117, 119, 116, 124, 116, 122, 108, 106, 112, 102, 108, 109, 97, 96, 97, 96, 98, 97, 100, 99, 98, 100, 100, 96, 100, 96, 95, 95, 97, 98, 104, 102, 95, 101, 96, 91, 93, 95, 97, 129, 97, 92, 94, 93, 93, 94, 96, 96, 102, 95, 97, 93, 90, 92, 93, 98, 98, 96, 95, 84, 89, 82, 88, 85, 84, 85, 84, 80, 82, 86, 83, 80, 80, 79, 81, 85, 80, 79, 89, 89, 87, 81, 79, 81, 81, 86, 81, 88, 82, 79, 80, 78, 83, 78, 89, 85, 82, 79, 80, 77, 84, 82, 81, 79, 83, 84, 83, 81, 83, 82, 83]
plt.plot(td_fsbl_epi, td_fsbl_step, color='limegreen', linewidth=1, label='TD3 feasible solution')
plt.plot(td_best_epi, td_best_step, color='lightgreen', linewidth=0.8, linestyle='--')
plt.scatter(td_best_epi, td_best_step, color='green', s=30, label='TD3 best solution')
plt.legend(loc='upper right', prop={'size':6})
title5 = 'instance(5)'
plt.title(title5)
plt.xlabel('instance (5)')
plt.ylabel('number of steps of the solution')
fig_path = 'result/' + '[5,2,3]' + '.png'
plt.savefig(fig_path)
plt.close()
num_fsbl5 = len(fsbl_epi)
t_num_fsbl5 = len(td_fsbl_epi)

# [3,3,1]
best_epi = [0, 2, 14, 28, 35, 37, 47, 49, 61, 111, 113, 114, 134, 180, 207, 227, 238, 241, 250, 252, 253, 292, 296, 306, 312, 313, 358, 363, 400, 402, 410, 436, 439, 441, 443, 446, 593, 639, 641, 671]
best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 132, 117, 120, 125, 117, 115, 115, 114, 114, 114, 118, 114, 115, 115, 112, 112, 109, 108, 108]
fsbl_epi = [292, 296, 306, 312, 313, 320, 321, 322, 323, 328, 331, 333, 343, 344, 347, 349, 350, 351, 353, 354, 357, 358, 360, 362, 363, 364, 365, 366, 368, 370, 371, 373, 376, 378, 398, 399, 400, 401, 402, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 430, 432, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 446, 468, 517, 519, 524, 525, 527, 530, 532, 535, 536, 537, 538, 539, 586, 590, 591, 593, 595, 605, 606, 609, 611, 627, 630, 639, 641, 645, 651, 655, 661, 663, 667, 671, 686]
fsbl_step = [132, 117, 120, 125, 117, 155, 158, 140, 122, 124, 121, 118, 116, 117, 115, 119, 116, 139, 119, 123, 117, 115, 115, 154, 115, 119, 116, 117, 154, 117, 117, 137, 117, 116, 115, 116, 114, 114, 114, 115, 114, 120, 114, 118, 113, 115, 116, 115, 115, 116, 117, 118, 116, 119, 120, 118, 120, 118, 119, 119, 119, 119, 122, 118, 117, 114, 116, 115, 117, 115, 111, 112, 114, 113, 114, 113, 111, 114, 114, 111, 115, 113, 111, 110, 112, 112, 154, 113, 112, 113, 110, 110, 112, 111, 109, 111, 109, 108, 109, 110, 110, 109, 112, 111, 108, 111]
plt.plot(fsbl_epi, fsbl_step, color='coral', linewidth=1, label='DDPG feasible solution')
plt.plot(best_epi, best_step, color='salmon', linewidth=0.8, linestyle='--')
plt.scatter(best_epi, best_step, color='crimson', s=30, label='DDPG best solution')
td_best_epi = [0, 2, 3, 11, 13, 14, 16, 86, 121, 271, 273, 635]
td_best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 119]
td_fsbl_epi = [490, 635]
td_fsbl_step = [151, 119]
plt.plot(td_fsbl_epi, td_fsbl_step, color='limegreen', linewidth=1, label='TD3 feasible solution')
plt.plot(td_best_epi, td_best_step, color='lightgreen', linewidth=0.8, linestyle='--')
plt.scatter(td_best_epi, td_best_step, color='green', s=30, label='TD3 best solution')
plt.legend(loc='upper right', prop={'size':6})
title6 = 'instance(6)'
plt.title(title6)
plt.xlabel('instance (6)')
plt.ylabel('number of steps of the solution')
fig_path = 'result/' + '[3,3,1]' + '.png'
plt.savefig(fig_path)
plt.close()
num_fsbl6 = len(fsbl_epi)
t_num_fsbl6 = len(td_fsbl_epi)

# [3,2,3]
best_epi = [0, 2, 14, 20, 28, 31, 34, 53, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 75, 76, 81, 83, 140, 148, 169, 175, 177, 182, 203, 212, 216, 240, 288, 342, 343, 348, 367, 371, 443, 454, 607, 621, 662, 673, 686]
best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 148, 118, 123, 112, 106, 107, 107, 105, 104, 105, 103, 101, 102, 103, 102, 103, 103, 102, 102, 104, 102, 102]
fsbl_epi = [148, 169, 175, 176, 177, 182, 183, 184, 185, 186, 188, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 248, 249, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 266, 288, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 497, 499, 500, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699]
fsbl_step = [148, 118, 123, 123, 112, 106, 109, 161, 107, 109, 109, 110, 113, 110, 110, 112, 111, 111, 108, 107, 108, 107, 111, 108, 105, 108, 110, 107, 107, 108, 107, 106, 105, 108, 106, 104, 105, 108, 130, 106, 106, 107, 108, 106, 153, 110, 107, 108, 107, 105, 106, 106, 104, 109, 114, 106, 107, 105, 105, 108, 106, 109, 103, 105, 103, 106, 105, 106, 142, 107, 105, 104, 103, 105, 104, 103, 104, 103, 103, 104, 105, 103, 103, 104, 105, 103, 104, 103, 104, 104, 105, 104, 103, 103, 102, 102, 103, 102, 104, 104, 103, 103, 104, 104, 104, 103, 112, 116, 113, 120, 116, 113, 118, 115, 119, 112, 112, 103, 101, 104, 103, 103, 104, 102, 103, 103, 103, 105, 104, 104, 107, 103, 104, 105, 105, 104, 105, 105, 103, 105, 104, 106, 103, 103, 106, 103, 102, 104, 104, 105, 105, 105, 108, 103, 104, 104, 105, 104, 104, 104, 103, 105, 106, 105, 104, 105, 107, 108, 106, 105, 104, 105, 104, 105, 105, 105, 104, 104, 106, 104, 106, 107, 106, 105, 105, 106, 106, 106, 107, 107, 107, 104, 105, 103, 104, 107, 108, 102, 108, 108, 107, 106, 106, 106, 107, 103, 105, 106, 108, 104, 106, 104, 103, 103, 104, 103, 105, 104, 103, 103, 103, 104, 102, 104, 103, 103, 103, 104, 103, 103, 103, 104, 104, 104, 103, 104, 104, 104, 103, 104, 103, 103, 103, 103, 104, 105, 104, 104, 104, 104, 107, 104, 104, 104, 103, 104, 105, 104, 104, 106, 103, 104, 105, 104, 104, 111, 105, 104, 104, 104, 103, 103, 105, 105, 104, 104, 105, 104, 102, 104, 106, 106, 104, 105, 104, 107, 105, 105, 106, 105, 106, 105, 105, 106, 105, 105, 106, 105, 105, 105, 107, 105, 106, 106, 106, 105, 104, 106, 105, 105, 105, 105, 105, 105, 103, 104, 104, 104, 104, 105, 104, 105, 104, 104, 104, 106, 105, 104, 104, 104, 104, 104, 104, 106, 104, 111, 106, 103, 105, 105, 103, 104, 104, 103, 104, 103, 104, 103, 103, 103, 104, 103, 103, 103, 103, 104, 103, 105, 103, 104, 104, 104, 103, 104, 103, 103, 104, 104, 103, 104, 104, 104, 105, 104, 104, 102, 104, 103, 104, 103, 103, 104, 104, 103, 102, 103, 102, 103, 103, 102, 104, 103, 103, 103, 103, 104, 103, 102, 103, 103, 105, 103, 105, 104, 104, 104, 103, 103, 103, 104, 103, 105, 104, 102, 104, 105, 104, 105, 103, 103, 103, 104, 103, 104, 103, 104, 104, 105, 104, 104, 105, 103, 104, 102, 103, 104, 104, 105, 103, 102, 102, 104, 105, 104, 105, 103, 103, 103, 104, 103, 102, 104, 103, 102, 104, 103, 104, 105, 104, 104, 105, 103, 103, 103, 104, 104, 103]
plt.plot(fsbl_epi, fsbl_step, color='coral', linewidth=1, label='DDPG feasible solution')
plt.plot(best_epi, best_step, color='salmon', linewidth=0.8, linestyle='--')
plt.scatter(best_epi, best_step, color='crimson', s=30, label='DDPG best solution')
td_best_epi = [0, 2, 3, 11, 14, 16, 22, 68, 69, 92, 96, 100, 208, 209, 257, 354, 355, 379, 383, 577, 616]
td_best_step = [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 112, 115, 117, 109, 109, 110, 116]
td_fsbl_epi = [257, 258, 260, 261, 269, 272, 273, 274, 276, 278, 279, 280, 281, 283, 284, 285, 311, 313, 314, 315, 316, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 346, 354, 355, 356, 361, 362, 363, 367, 370, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 403, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 455, 456, 462, 471, 474, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 499, 501, 504, 505, 506, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 576, 577, 580, 581, 616, 666, 667, 672]
td_fsbl_step = [112, 114, 113, 118, 119, 119, 121, 119, 121, 125, 129, 120, 123, 125, 119, 130, 123, 123, 120, 118, 117, 109, 111, 108, 106, 109, 109, 109, 108, 108, 109, 120, 121, 115, 117, 110, 109, 109, 131, 129, 127, 109, 108, 108, 109, 108, 109, 109, 113, 106, 112, 112, 116, 111, 114, 111, 113, 110, 112, 109, 108, 109, 112, 111, 113, 123, 120, 121, 118, 124, 122, 123, 115, 123, 120, 121, 119, 119, 114, 118, 114, 115, 112, 115, 112, 115, 110, 112, 112, 111, 111, 114, 114, 111, 110, 111, 110, 110, 116, 120, 115, 114, 114, 114, 111, 114, 112, 113, 108, 109, 109, 113, 108, 113, 112, 109, 108, 109, 109, 110, 111, 110, 111, 112, 115, 114, 108, 112, 110, 111, 110, 109, 107, 107, 106, 109, 107, 107, 110, 112, 110, 107, 109, 109, 106, 108, 110, 106, 111, 109, 113, 110, 117, 116, 116, 118, 122, 123]
plt.plot(td_fsbl_epi, td_fsbl_step, color='limegreen', linewidth=1, label='TD3 feasible solution')
plt.plot(td_best_epi, td_best_step, color='lightgreen', linewidth=0.8, linestyle='--')
plt.scatter(td_best_epi, td_best_step, color='green', s=30, label='TD3 best solution')
plt.legend(loc='upper right', prop={'size':6})
title7 = 'instance(7)'
plt.title(title7)
plt.xlabel('instance (7)')
plt.ylabel('number of steps of the solution')
fig_path = 'result/' + '[3,2,3]' + '.png'
plt.savefig(fig_path)
plt.close()
num_fsbl7 = len(fsbl_epi)
t_num_fsbl7 = len(td_fsbl_epi)


# [3,3,2]
best_epi = [0, 2, 17, 29, 56, 91, 181, 182, 203, 213, 221, 222, 229, 304, 353, 354, 357, 517, 527, 700, 871]
best_step = [150, 150, 150, 150, 150, 150, 150, 114, 105, 100, 100, 97, 98, 99, 99, 100, 99, 98, 98, 99, 98]
fsbl_epi = [182, 203, 210, 213, 221, 222, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 254, 304, 305, 310, 326, 327, 328, 329, 330, 332, 353, 354, 357, 360, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 386, 405, 407, 413, 424, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 513, 514, 515, 517, 518, 519, 523, 525, 527, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 555, 556, 557, 558, 559, 560, 562, 563, 565, 571, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 636, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 770, 774, 775, 781, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 800, 801, 803, 804, 806, 809, 810, 811, 812, 813, 815, 817, 818, 819, 820, 821, 824, 825, 826, 833, 834, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 887, 888, 890, 891, 893, 894, 895, 896, 898, 900, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 915, 916, 917, 918, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 983, 987, 992, 993, 994, 995, 996, 997, 998, 999]
fsbl_step = [114, 105, 102, 100, 100, 97, 99, 98, 98, 98, 99, 99, 99, 98, 98, 100, 99, 101, 101, 100, 98, 99, 100, 99, 98, 99, 100, 98, 98, 99, 99, 100, 101, 98, 99, 98, 99, 99, 99, 99, 100, 99, 100, 99, 98, 99, 99, 100, 100, 98, 100, 98, 98, 99, 99, 99, 99, 100, 101, 99, 100, 101, 101, 100, 100, 100, 100, 100, 99, 100, 99, 99, 101, 101, 101, 100, 99, 101, 102, 104, 100, 102, 100, 101, 101, 103, 101, 102, 102, 107, 106, 109, 108, 108, 109, 106, 110, 106, 105, 113, 103, 102, 106, 100, 107, 100, 101, 99, 100, 99, 100, 99, 102, 100, 99, 100, 102, 98, 100, 133, 99, 99, 98, 100, 98, 98, 101, 100, 112, 100, 97, 99, 100, 100, 99, 98, 101, 100, 101, 99, 103, 104, 101, 99, 100, 98, 99, 98, 100, 100, 99, 98, 101, 99, 99, 99, 101, 100, 99, 99, 100, 99, 100, 99, 98, 99, 99, 98, 98, 98, 99, 98, 99, 98, 98, 99, 98, 98, 99, 98, 99, 98, 98, 99, 99, 99, 98, 99, 99, 98, 99, 99, 98, 100, 99, 99, 99, 99, 99, 100, 98, 98, 101, 98, 99, 99, 99, 99, 100, 100, 99, 100, 103, 103, 102, 101, 102, 104, 99, 102, 101, 99, 101, 100, 103, 100, 101, 98, 99, 99, 98, 100, 102, 101, 98, 99, 100, 99, 100, 99, 100, 99, 99, 98, 98, 99, 99, 99, 99, 99, 99, 99, 98, 101, 101, 100, 100, 99, 98, 99, 99, 99, 99, 100, 100, 100, 101, 100, 103, 99, 101, 103, 101, 102, 100, 100, 100, 100, 99, 101, 101, 102, 100, 99, 99, 100, 98, 99, 98, 98, 98, 99, 99, 98, 100, 100, 100, 101, 99, 99, 100, 99, 99, 99, 98, 99, 99, 97, 99, 100, 99, 99, 98, 99, 99, 98, 99, 98, 98, 98, 98, 98, 98, 98, 99, 100, 99, 98, 99, 100, 99, 99, 98, 99, 104, 104, 101, 100, 99, 100, 101, 102, 101, 103, 103, 99, 100, 100, 100, 100, 99, 100, 100, 99, 99, 99, 100, 99, 98, 98, 99, 99, 99, 99, 98, 99, 99, 99, 99, 100, 101, 101, 101, 103, 100, 99, 101, 99, 102, 100, 101, 100]
plt.plot(fsbl_epi, fsbl_step, color='coral', linewidth=1, label='DDPG feasible solution')
plt.plot(best_epi, best_step, color='salmon', linewidth=0.8, linestyle='--')
plt.scatter(best_epi, best_step, color='crimson', s=30, label='DDPG best solution')
td_best_epi = [0, 3, 4, 18, 23, 25, 53, 54, 56, 58, 59, 60, 62, 69, 71, 72, 75, 79, 80, 81, 84, 96, 137, 138, 140, 155, 199, 200, 201, 202, 218, 219, 220, 221, 357, 360, 371, 373, 374, 375, 376, 516, 517, 519, 522, 643, 646, 647, 734, 735, 761, 762, 778, 812, 887, 890]
td_best_step = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 116, 114, 113, 108, 105, 108, 102, 102]
td_fsbl_epi = [734, 735, 736, 759, 760, 761, 762, 764, 775, 778, 779, 781, 782, 783, 784, 785, 786, 787, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 811, 812, 813, 814, 818, 820, 821, 822, 823, 825, 826, 827, 839, 845, 853, 857, 858, 859, 860, 861, 887, 890, 892, 906, 925, 929, 931, 936, 941, 952, 953, 956, 961, 965, 966, 968, 969]
td_fsbl_step = [116, 114, 115, 133, 118, 113, 108, 124, 132, 105, 108, 141, 116, 111, 115, 119, 115, 114, 119, 118, 115, 114, 117, 118, 116, 110, 123, 114, 112, 124, 111, 127, 108, 108, 109, 110, 120, 114, 111, 125, 123, 121, 121, 138, 126, 129, 138, 122, 126, 119, 114, 102, 102, 106, 108, 99, 116, 105, 101, 104, 106, 100, 101, 99, 104, 108, 105, 107]
plt.plot(td_fsbl_epi, td_fsbl_step, color='limegreen', linewidth=1, label='TD3 feasible solution')
plt.plot(td_best_epi, td_best_step, color='lightgreen', linewidth=0.8, linestyle='--')
plt.scatter(td_best_epi, td_best_step, color='green', s=30, label='TD3 best solution')
plt.legend(loc='upper right', prop={'size':6})
title8 = 'instance(8)'
plt.title(title8)
plt.xlabel('instance (8)')
plt.ylabel('number of steps of the solution')
fig_path = 'result/' + '[3,3,2]' + '.png'
plt.savefig(fig_path)
plt.close()
num_fsbl8 = len(fsbl_epi)
t_num_fsbl8 = len(td_fsbl_epi)




# number of feasible solutions
solution_num_d = [num_fsbl1, num_fsbl2, num_fsbl3, num_fsbl4, num_fsbl5, num_fsbl6, num_fsbl7, num_fsbl8]
solution_num_t = [t_num_fsbl1, t_num_fsbl2, t_num_fsbl3, t_num_fsbl4, t_num_fsbl5, t_num_fsbl6, t_num_fsbl7, t_num_fsbl8]
x = np.arange(len(instances))
width = 0.3
d = x
t = x + width
plt.bar(d, solution_num_d, width=width, color='crimson', label='DDPG')
plt.bar(t, solution_num_t, width=width, color='lightseagreen', label='TD3')
plt.xticks(x+0.5*width, labels=instances)
for i in range(len(instances)):
    plt.text(d[i], solution_num_d[i], solution_num_d[i], va="bottom",ha="center",fontsize=7)
    plt.text(t[i], solution_num_t[i], solution_num_t[i], va="bottom", ha="center", fontsize=7)
plt.legend(loc='upper right', prop={'size':6})
title1 = 'number of feasible solutions over 700 episodes'
plt.title(title1)
plt.xlabel('instance')
plt.ylabel('solution numbers')
fig_path = 'result/' + 'feasible solution number' + '.png'
plt.savefig(fig_path)
plt.close()
















